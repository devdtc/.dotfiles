
(require 'package)

(add-to-list 'package-archives '("org" . "https://orgmode.org/elpa/"))
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
(add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/"))

(setq package-enable-at-startup nil)
(package-initialize)

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(eval-when-compile
  (require 'use-package))


(use-package org
  :ensure org-plus-contrib)

(use-package cl
  :ensure t)

(use-package org-drill
  :after org)

(use-package evil
  :ensure t
  :init
    (setq evil-want-C-i-jump nil) ;; fixes TAB in org-mode
    (setq evil-want-C-u-scroll t) ;; fixes C-u scrolling
  :config
    (evil-mode t))

;; (use-package org-evil
;;  :after (org evil)
;;  :ensure t)

;; (use-package org-learn
;;   :ensure t)
;; 
;; (use-package org-drill
;;   :load-path "~/.emacs.d/packages/org-drill")


(use-package base16-theme
  :ensure t
  :config
    (load-theme 'base16-default-dark t)
    (defvar my/base16-colors base16-default-dark-colors)
    (setq
      evil-emacs-state-cursor   `(,(plist-get my/base16-colors :base0D) box)
      evil-insert-state-cursor  `(,(plist-get my/base16-colors :base0D) bar)
      evil-motion-state-cursor  `(,(plist-get my/base16-colors :base0E) box)
      evil-normal-state-cursor  `(,(plist-get my/base16-colors :base0B) box)
      evil-replace-state-cursor `(,(plist-get my/base16-colors :base08) bar)
      evil-visual-state-cursor  `(,(plist-get my/base16-colors :base09) box)))

(use-package helm
  :ensure t)

(fset 'yes-or-no-p 'y-or-n-p) ;; prompts accept y/n instead of yes/no
